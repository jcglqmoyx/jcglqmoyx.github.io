<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on SCIENCE | ART</title>
    <link>https://jcglqmoyx.github.io/posts/</link>
    <description>Recent content in Posts on SCIENCE | ART</description>
    <image>
      <title>SCIENCE | ART</title>
      <url>https://jcglqmoyx.github.io/images/papermod-cover.png</url>
      <link>https://jcglqmoyx.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Feb 2025 23:00:40 +0800</lastBuildDate>
    <atom:link href="https://jcglqmoyx.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring Rust Edition 2024 and High-Performance Development</title>
      <link>https://jcglqmoyx.github.io/posts/exploring-rust-edition-2024-and-high-performance-development/</link>
      <pubDate>Thu, 20 Feb 2025 23:00:40 +0800</pubDate>
      <guid>https://jcglqmoyx.github.io/posts/exploring-rust-edition-2024-and-high-performance-development/</guid>
      <description>&lt;p&gt;The new major release of Rust, Rust Edition 2024, finally came out today, and Iâ€™ve been eagerly waiting for this. Although Iâ€™m not yet very experienced with all the new features of the language, Iâ€™ve been following its development and the growing community for quite some time. Iâ€™m obsessed with Rustâ€™s high performance and memory safety. Over the past one or two years, Iâ€™ve written several projects in Rust, and Iâ€™ve always been impressed with how fast and stable the runtime is, along with its efficient use of memory. Iâ€™ve also tried solving LeetCode problems with Rust, but I eventually gave up because the languageâ€™s strict syntax rules made it difficult to solve competitive programming problems. Although I donâ€™t currently need the new features introduced in Edition 2024, I still hope to use this as an opportunity to dive deeper into Rust and the field of high-performance development. ðŸ’ª&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
